language: python
dist: trusty
services:
  - docker

notifications:
  email: false

#env:
#    global:
#      - PATH=$PATH


matrix:
    include:

        # The main build:
        # Python 2, Fermi ST, all dependencies
        - os: linux
          env: NAME=main
               PYTHON_VERSION=2.7
               CONDA_DOWNLOAD=Miniconda-latest-Linux-x86_64.sh
               ST_INSTALL='bash stinstall.sh force'
               DOCKER_SETUP=''
               CONDA_DEPS='scipy matplotlib pytest pyyaml'
               CONDA2='conda install -c conda-forge healpy wcsaxes'

        # The Sphinx docs build
        # Python 3, no Fermi ST, all other dependencies
        - os: linux
          env: NAME=docs
               PYTHON_VERSION=3.5
               ST_INSTALL=''
               DOCKER_SETUP=''
               CONDA_DOWNLOAD=Miniconda3-latest-Linux-x86_64.sh
               CONDA_DEPS='scipy matplotlib pytest pyyaml sphinx'
               CONDA2='conda install -c conda-forge healpy wcsaxes'

        # Python 3, no Fermi ST, all other dependencies
        - os: linux
          env: NAME=py3_st-no_dep-yes
               PYTHON_VERSION=3.5
               ST_INSTALL=''
               DOCKER_SETUP=''
               CONDA_DOWNLOAD=Miniconda3-latest-Linux-x86_64.sh
               CONDA_DEPS='scipy matplotlib pytest pyyaml'
               CONDA2='conda install -c conda-forge healpy wcsaxes'

        # Python 2, no Fermi ST, all other dependencies
        - os: linux
          env: NAME=NAME=py2_st-no_dep-yes
               PYTHON_VERSION=2.7
               ST_INSTALL=''
               DOCKER_SETUP=''
               CONDA_DOWNLOAD=Miniconda3-latest-Linux-x86_64.sh
               CONDA_DEPS='scipy matplotlib pytest pyyaml'
               CONDA2='conda install -c conda-forge healpy wcsaxes'

        - os: linux
          sudo: required
          env: NAME=NAME=docker-test
               PYTHON_VERSION=2.7
               ST_INSTALL=''
               DOCKER_SETUP='bash dockersetup.sh'
               CONDA_DOWNLOAD=Miniconda3-latest-Linux-x86_64.sh
               CONDA_DEPS='scipy matplotlib pytest pyyaml'
               CONDA2='conda install -c conda-forge healpy wcsaxes'
               #DOCKER_SETUP='docker build -t mdwood/fermist .;docker info;docker images'

              
#        # Python 3, no Fermi ST, only the required dependencies
#        # TODO: This isn't working yet, need to handle imports for opt deps more carefully
#        - os: linux
#          env: PYTHON_VERSION=3.5
#               ST_INSTALL=''
#               CONDA_DOWNLOAD=Miniconda3-latest-Linux-x86_64.sh
#               CONDA_DEPS=''
#               CONDA2=''

#before_install:
#  - cat Dockerfile
#  - $DOCKER_SETUP
#  - ls

# Setup anaconda and install packages
install:
  - cat Dockerfile
  - $DOCKER_SETUP
  - ls
  
#  - wget http://repo.continuum.io/miniconda/$CONDA_DOWNLOAD -O miniconda.sh
#  - bash miniconda.sh -b -p $HOME/miniconda
#  - export PATH="$HOME/miniconda/bin:$PATH"
#  - conda config --set always_yes yes --set changeps1 no
#  - conda update -q conda
#  - conda info -a
#  - conda create -q -n fermi-env python=$PYTHON_VERSION pip numpy astropy pytest $CONDA_DEPS
#  - source activate fermi-env
#  - python -m pip install coverage pytest-cov coveralls
#  - $CONDA2
#  - python setup.py install
#  - $ST_INSTALL # Download and install the ST binaries
#  - source travissetup.sh
#  - source condasetup.sh

#  - source activate test-environment
#  - conda install --yes python=$TRAVIS_PYTHON_VERSION numpy scipy matplotlib astropy 
#  - pip install healpy

  # This is needed to make matplotlib plot testing work
  - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then
        export DISPLAY=:99.0;
        sh -e /etc/init.d/xvfb start;
        export QT_API=pyqt;
    fi


# Run test
script:
  - python -m pytest -vv -s --cov=fermipy --cov-config=fermipy/tests/coveragerc

  - if [[ $NAME == 'docs' ]]; then
        cd docs;
        sphinx-build -b html -d _build/doctrees . _build/html -W;
    fi


#cache:
#  directories:
#  - $HOME/ScienceTools

after_success:
    - if [[ $NAME == 'main' ]]; then
          coveralls --rcfile='fermipy/tests/coveragerc';
      fi
